{"version":3,"names":["React","Platform","TouchableNativeFeedback","TouchableOpacity","View","ANDROID_VERSION_LOLLIPOP","TouchableItem","Component","render","OS","Version","style","rest","props","Ripple","pressColor","borderless","Children","only","children"],"sources":["TouchableItem.tsx"],"sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  pressColor: string;\n  borderless: boolean;\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)',\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= ANDROID_VERSION_LOLLIPOP\n    ) {\n      const { style, ...rest } = this.props;\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          style={null}\n          background={TouchableNativeFeedback.Ripple(\n            this.props.pressColor,\n            this.props.borderless\n          )}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    }\n\n    return (\n      <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>\n    );\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,QAAQ,EACRC,uBAAuB,EACvBC,gBAAgB,EAChBC,IAAI,QAEC,cAAc;AAErB,MAAMC,wBAAwB,GAAG,EAAE;AAOnC,eAAe,MAAMC,aAAa,SAASN,KAAK,CAACO,SAAS,CAAQ;EAMhEC,MAAM,GAAG;IACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IACEP,QAAQ,CAACQ,EAAE,KAAK,SAAS,IACzBR,QAAQ,CAACS,OAAO,IAAIL,wBAAwB,EAC5C;MACA,MAAM;QAAEM,KAAK;QAAE,GAAGC;MAAK,CAAC,GAAG,IAAI,CAACC,KAAK;MACrC,oBACE,oBAAC,uBAAuB,eAClBD,IAAI;QACR,KAAK,EAAE,IAAK;QACZ,UAAU,EAAEV,uBAAuB,CAACY,MAAM,CACxC,IAAI,CAACD,KAAK,CAACE,UAAU,EACrB,IAAI,CAACF,KAAK,CAACG,UAAU;MACrB,iBAEF,oBAAC,IAAI;QAAC,KAAK,EAAEL;MAAM,GAAEX,KAAK,CAACiB,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAQ,CAC7C;IAE9B;IAEA,oBACE,oBAAC,gBAAgB,EAAK,IAAI,CAACN,KAAK,EAAG,IAAI,CAACA,KAAK,CAACM,QAAQ,CAAoB;EAE9E;AACF;AAAC,gBAtCoBb,aAAa,kBACV;EACpBU,UAAU,EAAE,KAAK;EACjBD,UAAU,EAAE;AACd,CAAC"}