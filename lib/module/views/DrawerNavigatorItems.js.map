{"version":3,"names":["React","View","Text","StyleSheet","SafeAreaView","ThemeContext","TouchableItem","DrawerNavigatorItems","Component","getActiveTintColor","activeTintColor","props","context","getInactiveTintColor","inactiveTintColor","getActiveBackgroundColor","activeBackgroundColor","getInactiveBackgroundColor","inactiveBackgroundColor","render","items","activeItemKey","getLabel","renderIcon","onItemPress","itemsContainerStyle","itemStyle","labelStyle","activeLabelStyle","inactiveLabelStyle","iconContainerStyle","drawerPosition","styles","container","map","route","index","focused","key","color","backgroundColor","scene","tintColor","icon","label","accessibilityLabel","undefined","extraLabelStyle","item","vertical","inactiveIcon","light","dark","create","paddingVertical","flexDirection","alignItems","marginHorizontal","width","opacity","margin","fontWeight"],"sources":["DrawerNavigatorItems.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { SafeAreaView, ThemeContext } from 'react-navigation';\nimport TouchableItem from './TouchableItem';\nimport { DrawerNavigatorItemsProps } from '../types';\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default class DrawerNavigatorItems extends React.Component<\n  DrawerNavigatorItemsProps\n> {\n  /* Material design specs - https://material.io/guidelines/patterns/navigation-drawer.html#navigation-drawer-specs */\n  static defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff',\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)',\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)',\n    },\n    inactiveBackgroundColor: {\n      light: 'transparent',\n      dark: 'transparent',\n    },\n  };\n\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n\n  private getActiveTintColor() {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  }\n\n  private getInactiveTintColor() {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  }\n\n  private getActiveBackgroundColor() {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  }\n\n  private getInactiveBackgroundColor() {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  }\n\n  render() {\n    const {\n      items,\n      activeItemKey,\n      getLabel,\n      renderIcon,\n      onItemPress,\n      itemsContainerStyle,\n      itemStyle,\n      labelStyle,\n      activeLabelStyle,\n      inactiveLabelStyle,\n      iconContainerStyle,\n      drawerPosition,\n    } = this.props;\n\n    const activeTintColor = this.getActiveTintColor();\n    const activeBackgroundColor = this.getActiveBackgroundColor();\n    const inactiveTintColor = this.getInactiveTintColor();\n    const inactiveBackgroundColor = this.getInactiveBackgroundColor();\n\n    return (\n      <View style={[styles.container, itemsContainerStyle]}>\n        {items.map((route, index: number) => {\n          const focused = activeItemKey === route.key;\n          const color = focused ? activeTintColor : inactiveTintColor;\n          const backgroundColor = focused\n            ? activeBackgroundColor\n            : inactiveBackgroundColor;\n          const scene = { route, index, focused, tintColor: color };\n          const icon = renderIcon(scene);\n          const label = getLabel(scene);\n          const accessibilityLabel =\n            typeof label === 'string' ? label : undefined;\n          const extraLabelStyle = focused\n            ? activeLabelStyle\n            : inactiveLabelStyle;\n          return (\n            <TouchableItem\n              key={route.key}\n              accessible\n              accessibilityLabel={accessibilityLabel}\n              onPress={() => {\n                onItemPress({ route, focused });\n              }}\n              delayPressIn={0}\n            >\n              <SafeAreaView\n                style={[{ backgroundColor }, styles.item, itemStyle]}\n                forceInset={{\n                  [drawerPosition]: 'always',\n                  [drawerPosition === 'left' ? 'right' : 'left']: 'never',\n                  vertical: 'never',\n                }}\n              >\n                {icon ? (\n                  <View\n                    style={[\n                      styles.icon,\n                      focused ? null : styles.inactiveIcon,\n                      iconContainerStyle,\n                    ]}\n                  >\n                    {icon}\n                  </View>\n                ) : null}\n                {typeof label === 'string' ? (\n                  <Text\n                    style={[\n                      styles.label,\n                      { color },\n                      labelStyle,\n                      extraLabelStyle,\n                    ]}\n                  >\n                    {label}\n                  </Text>\n                ) : (\n                  label\n                )}\n              </SafeAreaView>\n            </TouchableItem>\n          );\n        })}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginHorizontal: 16,\n    width: 24,\n    alignItems: 'center',\n  },\n  inactiveIcon: {\n    /*\n     * Icons have 0.54 opacity according to guidelines\n     * 100/87 * 54 ~= 62\n     */\n    opacity: 0.62,\n  },\n  label: {\n    margin: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"}