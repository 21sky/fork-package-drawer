{"version":3,"names":["SwitchRouter","NavigationActions","DrawerActions","withDefaultValue","obj","key","defaultValue","hasOwnProperty","getActiveRouteKey","route","routes","index","routeConfigs","config","unmountInactiveRoutes","resetOnBlur","switchRouter","getActionCreators","navStateKey","openDrawer","closeDrawer","toggleDrawer","getStateForAction","action","state","undefined","isDrawerOpen","isRouterTargeted","type","CLOSE_DRAWER","BACK","OPEN_DRAWER","TOGGLE_DRAWER","switchedState"],"sources":["DrawerRouter.tsx"],"sourcesContent":["import {\n  SwitchRouter,\n  NavigationActions,\n  NavigationAction,\n  NavigationRoute,\n  NavigationRouteConfigMap,\n} from 'react-navigation';\nimport * as DrawerActions from './DrawerActions';\n\ntype State = NavigationRoute & {\n  isDrawerOpen?: any;\n};\n\nfunction withDefaultValue(obj: object, key: string, defaultValue: any): any {\n  // @ts-ignore\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  // @ts-ignore\n  obj[key] = defaultValue;\n  return obj;\n}\n\nconst getActiveRouteKey = (route: NavigationRoute): string => {\n  if (\n    route.routes &&\n    typeof route.index === 'number' &&\n    route.routes[route.index]\n  ) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n\n  return route.key;\n};\n\nexport default (\n  routeConfigs: NavigationRouteConfigMap<any, any>,\n  config: {\n    unmountInactiveRoutes?: boolean;\n    resetOnBlur?: boolean;\n    initialRouteName?: string;\n  } = {}\n) => {\n  config = { ...config };\n  config = withDefaultValue(\n    config,\n    'resetOnBlur',\n    config.unmountInactiveRoutes ? true : !!config.resetOnBlur\n  );\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n\n  return {\n    ...switchRouter,\n\n    getActionCreators(route: NavigationRoute, navStateKey: string) {\n      return {\n        openDrawer: () => DrawerActions.openDrawer({ key: navStateKey }),\n        closeDrawer: () => DrawerActions.closeDrawer({ key: navStateKey }),\n        toggleDrawer: () => DrawerActions.toggleDrawer({ key: navStateKey }),\n        ...switchRouter.getActionCreators(route, navStateKey),\n      };\n    },\n\n    getStateForAction(action: NavigationAction, state?: State) {\n      // Set up the initial state if needed\n      if (!state) {\n        return {\n          ...switchRouter.getStateForAction(action, undefined),\n          isDrawerOpen: false,\n        };\n      }\n\n      const isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        // Only handle actions that are meant for this drawer, as specified by action.key.\n        if (\n          action.type === DrawerActions.CLOSE_DRAWER ||\n          (action.type === NavigationActions.BACK && state.isDrawerOpen)\n        ) {\n          return {\n            ...state,\n            isDrawerOpen: false,\n          };\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: true,\n          };\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: !state.isDrawerOpen,\n          };\n        }\n      }\n\n      // Fall back on switch router for screen switching logic, and handling of child routers\n      const switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        // The switch router or a child router is attempting to swallow this action. We return null to allow this.\n        return null;\n      }\n\n      // Has the switch router changed the state?\n      if (switchedState !== state) {\n        // If any navigation has happened, and the drawer is maybe open, make sure to close it\n        if (\n          getActiveRouteKey(switchedState) !== getActiveRouteKey(state) &&\n          state.isDrawerOpen\n        ) {\n          return {\n            ...switchedState,\n            isDrawerOpen: false,\n          };\n        }\n\n        // At this point, return the state as defined by the switch router.\n        // The active route key hasn't changed, so this most likely means that a child router has returned\n        // a new state like a param change, but the same key is still active and the drawer will remain open\n        return switchedState;\n      }\n\n      return state;\n    },\n  };\n};\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,iBAAiB,QAIZ,kBAAkB;AACzB,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAMhD,SAASC,gBAAgB,CAACC,GAAW,EAAEC,GAAW,EAAEC,YAAiB,EAAO;EAC1E;EACA,IAAIF,GAAG,CAACG,cAAc,CAACF,GAAG,CAAC,IAAI,OAAOD,GAAG,CAACC,GAAG,CAAC,KAAK,WAAW,EAAE;IAC9D,OAAOD,GAAG;EACZ;;EAEA;EACAA,GAAG,CAACC,GAAG,CAAC,GAAGC,YAAY;EACvB,OAAOF,GAAG;AACZ;AAEA,MAAMI,iBAAiB,GAAIC,KAAsB,IAAa;EAC5D,IACEA,KAAK,CAACC,MAAM,IACZ,OAAOD,KAAK,CAACE,KAAK,KAAK,QAAQ,IAC/BF,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,EACzB;IACA,OAAOH,iBAAiB,CAACC,KAAK,CAACC,MAAM,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC;EACrD;EAEA,OAAOF,KAAK,CAACJ,GAAG;AAClB,CAAC;AAED,gBAAe,UACbO,YAAgD,EAM7C;EAAA,IALHC,MAIC,uEAAG,CAAC,CAAC;EAENA,MAAM,GAAG;IAAE,GAAGA;EAAO,CAAC;EACtBA,MAAM,GAAGV,gBAAgB,CACvBU,MAAM,EACN,aAAa,EACbA,MAAM,CAACC,qBAAqB,GAAG,IAAI,GAAG,CAAC,CAACD,MAAM,CAACE,WAAW,CAC3D;EACDF,MAAM,GAAGV,gBAAgB,CAACU,MAAM,EAAE,cAAc,EAAE,cAAc,CAAC;EAEjE,MAAMG,YAAY,GAAGhB,YAAY,CAACY,YAAY,EAAEC,MAAM,CAAC;EAEvD,OAAO;IACL,GAAGG,YAAY;IAEfC,iBAAiB,CAACR,KAAsB,EAAES,WAAmB,EAAE;MAC7D,OAAO;QACLC,UAAU,EAAE,MAAMjB,aAAa,CAACiB,UAAU,CAAC;UAAEd,GAAG,EAAEa;QAAY,CAAC,CAAC;QAChEE,WAAW,EAAE,MAAMlB,aAAa,CAACkB,WAAW,CAAC;UAAEf,GAAG,EAAEa;QAAY,CAAC,CAAC;QAClEG,YAAY,EAAE,MAAMnB,aAAa,CAACmB,YAAY,CAAC;UAAEhB,GAAG,EAAEa;QAAY,CAAC,CAAC;QACpE,GAAGF,YAAY,CAACC,iBAAiB,CAACR,KAAK,EAAES,WAAW;MACtD,CAAC;IACH,CAAC;IAEDI,iBAAiB,CAACC,MAAwB,EAAEC,KAAa,EAAE;MACzD;MACA,IAAI,CAACA,KAAK,EAAE;QACV,OAAO;UACL,GAAGR,YAAY,CAACM,iBAAiB,CAACC,MAAM,EAAEE,SAAS,CAAC;UACpDC,YAAY,EAAE;QAChB,CAAC;MACH;MAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAAClB,GAAG,IAAI,IAAI,IAAIkB,MAAM,CAAClB,GAAG,KAAKmB,KAAK,CAACnB,GAAG;MAEvE,IAAIsB,gBAAgB,EAAE;QACpB;QACA,IACEJ,MAAM,CAACK,IAAI,KAAK1B,aAAa,CAAC2B,YAAY,IACzCN,MAAM,CAACK,IAAI,KAAK3B,iBAAiB,CAAC6B,IAAI,IAAIN,KAAK,CAACE,YAAa,EAC9D;UACA,OAAO;YACL,GAAGF,KAAK;YACRE,YAAY,EAAE;UAChB,CAAC;QACH;QAEA,IAAIH,MAAM,CAACK,IAAI,KAAK1B,aAAa,CAAC6B,WAAW,EAAE;UAC7C,OAAO;YACL,GAAGP,KAAK;YACRE,YAAY,EAAE;UAChB,CAAC;QACH;QAEA,IAAIH,MAAM,CAACK,IAAI,KAAK1B,aAAa,CAAC8B,aAAa,EAAE;UAC/C,OAAO;YACL,GAAGR,KAAK;YACRE,YAAY,EAAE,CAACF,KAAK,CAACE;UACvB,CAAC;QACH;MACF;;MAEA;MACA,MAAMO,aAAa,GAAGjB,YAAY,CAACM,iBAAiB,CAACC,MAAM,EAAEC,KAAK,CAAC;MAEnE,IAAIS,aAAa,KAAK,IAAI,EAAE;QAC1B;QACA,OAAO,IAAI;MACb;;MAEA;MACA,IAAIA,aAAa,KAAKT,KAAK,EAAE;QAC3B;QACA,IACEhB,iBAAiB,CAACyB,aAAa,CAAC,KAAKzB,iBAAiB,CAACgB,KAAK,CAAC,IAC7DA,KAAK,CAACE,YAAY,EAClB;UACA,OAAO;YACL,GAAGO,aAAa;YAChBP,YAAY,EAAE;UAChB,CAAC;QACH;;QAEA;QACA;QACA;QACA,OAAOO,aAAa;MACtB;MAEA,OAAOT,KAAK;IACd;EACF,CAAC;AACH,CAAC"}